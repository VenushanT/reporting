{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Venushan\\\\Downloads\\\\reporting\\\\frontend\\\\src\\\\components\\\\Map.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\n// Fix for default marker icons in Leaflet with React\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\nfunction LocationMarker({\n  onLocationSelect\n}) {\n  _s();\n  const [position, setPosition] = useState(null);\n  const map = useMapEvents({\n    click(e) {\n      setPosition(e.latlng);\n      onLocationSelect(e.latlng);\n    }\n  });\n  return position === null ? null : /*#__PURE__*/_jsxDEV(Marker, {\n    position: position\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(LocationMarker, \"Z+4nsYfm7MoZ42b9yWfecTtPTPw=\", false, function () {\n  return [useMapEvents];\n});\n_c = LocationMarker;\nfunction Map({\n  onLocationSelect\n}) {\n  _s2();\n  const [mapCenter, setMapCenter] = useState([51.505, -0.09]); // Default to London\n\n  useEffect(() => {\n    // Get user's current location\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setMapCenter([position.coords.latitude, position.coords.longitude]);\n      }, error => {\n        console.error('Error getting location:', error);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-[500px] rounded-lg overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: mapCenter,\n      zoom: 13,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LocationMarker, {\n        onLocationSelect: onLocationSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s2(Map, \"d2AU9I1HNbgOG5oYd1j1YHP13w0=\");\n_c2 = Map;\nexport default Map;\nvar _c, _c2;\n$RefreshReg$(_c, \"LocationMarker\");\n$RefreshReg$(_c2, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","useMapEvents","L","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","LocationMarker","onLocationSelect","_s","position","setPosition","map","click","e","latlng","fileName","_jsxFileName","lineNumber","columnNumber","_c","Map","_s2","mapCenter","setMapCenter","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","error","console","className","children","center","zoom","style","height","width","attribution","url","_c2","$RefreshReg$"],"sources":["C:/Users/Venushan/Downloads/reporting/frontend/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, useMapEvents } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\n// Fix for default marker icons in Leaflet with React\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\r\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\r\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png',\r\n});\r\n\r\nfunction LocationMarker({ onLocationSelect }) {\r\n  const [position, setPosition] = useState(null);\r\n  const map = useMapEvents({\r\n    click(e) {\r\n      setPosition(e.latlng);\r\n      onLocationSelect(e.latlng);\r\n    },\r\n  });\r\n\r\n  return position === null ? null : (\r\n    <Marker position={position} />\r\n  );\r\n}\r\n\r\nfunction Map({ onLocationSelect }) {\r\n  const [mapCenter, setMapCenter] = useState([51.505, -0.09]); // Default to London\r\n\r\n  useEffect(() => {\r\n    // Get user's current location\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        (position) => {\r\n          setMapCenter([position.coords.latitude, position.coords.longitude]);\r\n        },\r\n        (error) => {\r\n          console.error('Error getting location:', error);\r\n        }\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"h-[500px] rounded-lg overflow-hidden\">\r\n      <MapContainer\r\n        center={mapCenter}\r\n        zoom={13}\r\n        style={{ height: '100%', width: '100%' }}\r\n      >\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <LocationMarker onLocationSelect={onLocationSelect} />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAC7E,OAAO,0BAA0B;AACjC,OAAOC,CAAC,MAAM,SAAS;;AAEvB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAOF,CAAC,CAACG,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CN,CAAC,CAACG,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAE,gFAAgF;EAC/FC,OAAO,EAAE,6EAA6E;EACtFC,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,SAASC,cAAcA,CAAC;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMsB,GAAG,GAAGjB,YAAY,CAAC;IACvBkB,KAAKA,CAACC,CAAC,EAAE;MACPH,WAAW,CAACG,CAAC,CAACC,MAAM,CAAC;MACrBP,gBAAgB,CAACM,CAAC,CAACC,MAAM,CAAC;IAC5B;EACF,CAAC,CAAC;EAEF,OAAOL,QAAQ,KAAK,IAAI,GAAG,IAAI,gBAC7BZ,OAAA,CAACJ,MAAM;IAACgB,QAAQ,EAAEA;EAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAC9B;AACH;AAACV,EAAA,CAZQF,cAAc;EAAA,QAETZ,YAAY;AAAA;AAAAyB,EAAA,GAFjBb,cAAc;AAcvB,SAASc,GAAGA,CAAC;EAAEb;AAAiB,CAAC,EAAE;EAAAc,GAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlC,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE7DC,SAAS,CAAC,MAAM;IACd;IACA,IAAIkC,SAAS,CAACC,WAAW,EAAE;MACzBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACrCjB,QAAQ,IAAK;QACZc,YAAY,CAAC,CAACd,QAAQ,CAACkB,MAAM,CAACC,QAAQ,EAAEnB,QAAQ,CAACkB,MAAM,CAACE,SAAS,CAAC,CAAC;MACrE,CAAC,EACAC,KAAK,IAAK;QACTC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD,CACF,CAAC;IACH;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEjC,OAAA;IAAKmC,SAAS,EAAC,sCAAsC;IAAAC,QAAA,eACnDpC,OAAA,CAACN,YAAY;MACX2C,MAAM,EAAEZ,SAAU;MAClBa,IAAI,EAAE,EAAG;MACTC,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAL,QAAA,gBAEzCpC,OAAA,CAACL,SAAS;QACR+C,WAAW,EAAC,yFAAyF;QACrGC,GAAG,EAAC;MAAoD;QAAAzB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACFrB,OAAA,CAACS,cAAc;QAACC,gBAAgB,EAAEA;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEV;AAACG,GAAA,CAhCQD,GAAG;AAAAqB,GAAA,GAAHrB,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAsB,GAAA;AAAAC,YAAA,CAAAvB,EAAA;AAAAuB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}